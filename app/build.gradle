apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'com.antfortune.freeline'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.renyu.sostar"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'x86' // 还可以添加 'armeabi-v8a', 'x86_64', 'mips', 'mips64'
        }
    }
    signingConfigs {
        release {
            try {
                storeFile file("android.keystore")
                storePassword KEYSTORE_PASSWORD
                keyAlias "android.keystore"
                keyPassword KEY_PASSWORD
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    freeline {
//        hack true
//        autoDependency false
//    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    // butterknife
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    // andfix
    compile 'com.alipay.euler:andfix:0.5.0@aar'
    compile project(':CommonLibrary')
    compile project(':BaiduMapLibrary')
    compile project(':JPushLibrary')
    compile project(':ImageLibrary')
    compile project(':HyphenateLibrary')
    //    debugCompile project(":runtime:runtime")
    compile project(':QRCodeLibrary')
}